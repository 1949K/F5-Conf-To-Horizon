version: '3.8'

services:
  f5-translator:
    build: .
    container_name: f5-translator-prod
    ports:
      - "80:5000"  # 使用标准HTTP端口
    volumes:
      # 持久化数据目录
      - ./data:/app/data
      # 持久化日志目录
      - ./logs:/app/logs
      # 配置文件（只读）
      - ./core/config.py:/app/core/config.py:ro
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - SECRET_KEY=${SECRET_KEY:-your-production-secret-key}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
    networks:
      - f5-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.f5-translator.rule=Host(`your-domain.com`)"
      - "traefik.http.services.f5-translator.loadbalancer.server.port=5000"

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: f5-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - f5-translator
    restart: unless-stopped
    networks:
      - f5-network

  # Redis缓存（可选）
  redis:
    image: redis:7-alpine
    container_name: f5-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - f5-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

networks:
  f5-network:
    driver: bridge

volumes:
  data:
  logs:
  redis_data: 